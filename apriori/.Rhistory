df=data("Groceries")
df=data(Groceries)
install.packages("arules")
library(arulesviz)
install.packages(arulesviz)
install.packages("arulesviz")
library(arulesviz)
install.packages("arulesViz")
df=data(Groceries)
str(Groceries)
class(Groceries)
library(utils)
df=data(Groceries)
data()
try(data(package = "rpart") )
try(data(package = "arules") )
df=data("Groceries")
try(data(package = "arules") )
data(Groceries)
groceries <- read.transactions("http://www.sci.csueastbay.edu/~esuess/classes/Statistics_6620/Presentations/ml13/groceries.csv", sep = ",")
library(arules)
groceries <- read.transactions("http://www.sci.csueastbay.edu/~esuess/classes/Statistics_6620/Presentations/ml13/groceries.csv", sep = ",")
summary(groceries)
class(transactions)
library(arules)
library(arulesViz)
data(Groceries)
library(arules)
library(arulesViz)
data(Groceries)
summary(Groceries)
library(arules)
library(arulesViz)
d1=data(Groceries)
class(d1)
summary(Groceries)
library(arules)
library(arulesViz)
d1=data(Groceries)
class(d1)
summary(Groceries)
inspect(head(Groceries, 3))
View(Groceries)
df=read.table("proj3/df_inner_x.csv",sep = ",",header = T)
df=read.csv("proj3/df_inner_x.csv",sep = ",",header = T)
View(df)
colnames(df)
df_combined=data.frame(df["combined"])
View(df_combined)
write.csv(df_combined,"ItemList.csv", quote = F, row.names = TRUE)
txn = read.transactions(file="ItemList.csv", rm.duplicates= TRUE, format="basket",sep=",",cols=1);
basket_rules <- apriori(txn,parameter = list(sup = 0.01, conf = 0.5,target="rules"));
inspect(basket_rules)
itemFrequencyPlot(txn, topN = 100)
itemFrequencyPlot(txn, topN = 10)
basket_rules <- apriori(txn,parameter = list(sup = 0.04, conf = 0.5,target="rules"));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.02, conf = 0.3,target="rules"));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.02, conf = 0.2,target="rules"));
inspect(basket_rules)
txn = read.transactions(file="ItemList.csv", rm.duplicates= TRUE, format="basket",sep=",",cols=1);
basket_rules <- apriori(txn,parameter = list(sup = 0.02, conf = 0.2,target="rules"));
basket_rules <- apriori(txn,parameter = list(sup = 0.6, conf = 0.5,target="rules"));
inspect(basket_rules)
itemFrequencyPlot(txn, topN = 10)
basket_rules <- apriori(txn,parameter = list(sup = 0.6));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.06));
inspect(basket_rules)
inspect(txn)
basket_rules <- apriori(txn,parameter = list(sup = 0.6));
inspect(basket_rules)
inspect(basket_rules[1:5])
inspect(basket_rules[1:1])
basket_rules
basket_rules <- apriori(txn,parameter = list(sup = 0.5));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.3));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.2));
inspect(basket_rules)
basket_rules
basket_rules <- apriori(txn,parameter = list(sup = 0.02));
inspect(basket_rules)
basket_rules
basket_rules <- apriori(txn,parameter = list(sup = 0.002));
inspect(basket_rules)
basket_rules
basket_rules <- apriori(txn,parameter = list(sup = 0.6,conf=0.8,target="rules"));
inspect(basket_rules)
class(txn)
txn
txn = read.transactions(file="ItemList.csv", rm.duplicates= TRUE,sep=",",cols=1);
basket_rules <- apriori(txn,parameter = list(sup = 0.002));
inspect(basket_rules)
basket_rules
inspect(head(basket_rules, n = 1, by ="lift"))
basket_rules <- apriori(txn,parameter = list(sup = 0.0002));
inspect(head(basket_rules, n = 1, by ="lift"))
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.002));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.0002));
inspect(basket_rules)
basket_rules
basket_rules <- apriori(txn,parameter = list(sup = 0.00002));
basket_rules
itemFrequency(txn,topN=10)
itemFrequency(txn)
basket_rules <- apriori(txn,parameter = list(sup = 0.0002));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.002));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.009));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.003));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.002));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.0002));
inspect(basket_rules)
write.csv(df_combined,"ItemList.csv", quote = F, row.names = FALSE)
txn = read.transactions(file="ItemList.csv", rm.duplicates= TRUE,sep=",",cols=1);
txn = read.transactions(file="ItemList.csv",format = "basket", rm.duplicates= TRUE,sep=",",cols=1);
basket_rules <- apriori(txn,parameter = list(sup = 0.6,conf=0.8,target="rules"));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.006,conf=0.8,target="rules"));
inspect(basket_rules)
df_combined=df_combined[- grep("?", df["combined"]),]
write.csv(df_combined,"ItemList.csv", quote = F, row.names = FALSE)
df=read.csv("proj3/df_inner_x.csv",sep = ",",header = T)
df_combined=data.frame(df["combined"])
df_combined[!grepl("?", df["combined"]),]
write.csv(df_combined,"ItemList.csv", quote = F, row.names = FALSE)
df_combined=data.frame(df["combined"])
colnames(df_combined)
df_combined["combined"]=df_combined[!grepl("?", df["combined"], invert = TRUE),]
colnames(df_combined)
View(df_combined["combined"])
df_new=df_combined[!grepl("?", df["combined"], invert = TRUE),]
View(df_new)
df_new=df_combined[!grepl("?", df["combined"], ),]
View(df_new)
df_combined[!grepl("?", df["combined"], ),]
df_combined=data.frame(df["combined"])
df_combined[!grepl("?", df_combined["combined"], ),]
nrows(df_combined)
df3=df_combined[!grepl("?", df_combined["combined"], ),]
nrows(df3)
nrow(df3)
View(df3)
df4= df_combined[ !(c("?") %in% df_combined$combined  ), ]
View(df4)
nrow(df4)
nrow(df_combined)
df_combined=data.frame(df["combined"])
nrow(df_combined)
str_detect("ba", "banana")
install.packages("stringr")
library(stringr)
str_detect("ba", "banana")
str_detect("bananaSSSS", "banana")
df_combined=data.frame(df["combined"])
df_combined=data.frame(df["combined"])
nrow(df_combined)
df_combined=df_combined[!str_detect(df_combined["combined"],"?")]
df_combined=data.frame(df["combined"])
df_combined=df_combined[!str_detect(df_combined$combined,"?")]
df_combined
df_combined[!grepl("?", df_combined$combined),]
nrow(df_combined)
df_combined=df_combined[!grepl("?", df_combined$combined),]
nrow(df_combined)
df_combined=data.frame(df["combined"])
library(dplyr)
df_combined %>% filter(!grepl('?', combined))
df_combined %>% filter(!grepl('?', df_combined$combined))
nrow(df_combined)
df1<-df_combined[!grepl("?", df_combined$combined),]
nrow(df1)
df1
colnames(df1)
txn = read.transactions(file="a/loafernan.csv",format = "basket", rm.duplicates= TRUE,sep=",",cols=1);
basket_rules <- apriori(txn,parameter = list(sup = 0.0002));
View(txn)
txn = read.transactions(file="/a/loafernan.csv",format = "basket", rm.duplicates= TRUE,sep=",",cols=1);
txn = read.transactions(file="./a/loafernan.csv",format = "basket", rm.duplicates= TRUE,sep=",",cols=1);
basket_rules <- apriori(txn,parameter = list(sup = 0.0002));
inspect(basket_rules)
df_m=read.csv("a/loafernan.csv",sep = ",",header = T)
write.csv(df_combined,"ItemList2.csv", quote = F, row.names = FALSE)
txn = read.transactions(file="ItemList2.csv",format = "basket", rm.duplicates= TRUE,sep=",",cols=1);
basket_rules <- apriori(txn,parameter = list(sup = 0.0002));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.006));
plot(basket_rules,method="two-key plot")
basket_rules <- apriori(txn,parameter = list(sup = 0.0002));
plot(basket_rules,method="two-key plot")
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.00002));
inspect(basket_rules)
plot(basket_rules,method="two-key plot")
plotly_arules(basket_rules)
top10subRules <- head(basket_rules, n = 10, by = "confidence")
plot(top10subRules, method = "graph",  engine = "htmlwidget")
plot(basket_rules, method="paracoord")
plot(top10subRules, method="paracoord")
plot(top10subRules, method = "graph",  engine = "htmlwidget")
plot(top10subRules, method="paracoord")
plot(basket_rules,method="two-key plot")
plot(top10subRules,method="two-key plot")
rules_lift_gt_1=subset(basket_rules, subset = lift > 1)
rules_lift_lt_1=subset(basket_rules, subset = lift < 1)
rules_lift_equalto_1=subset(basket_rules, subset = lift = 1)
rules_lift_equalto_1=subset(basket_rules, subset = lift == 1)
inspect(basket_rules)
rules_lift_gt_1=subset(basket_rules, subset = lift > 1)
rgt= head(rules_lift_gt_1, n = 5, by = "confidence")
inspect(rgt)
inspect(rules_lift_gt_1)
basket_rules <- apriori(txn,parameter = list(sup = 0.0006,conf=0.8,target="rules"));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.0006,conf=0.08,target="rules"));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.0006,conf=0.1,target="rules"));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.0006,conf=0.4,target="rules"));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup = 0.0005,conf=0.3,target="rules"));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(conf=0.3,target="rules"));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(sup>0.6,conf>0.3,target="rules"));
basket_rules <- apriori(txn,parameter = list(supp = 0.006,conf=0.1,target="rules"));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(supp = 0.006,conf=0.01,target="rules"));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(supp = 0.006,conf=0.09,target="rules"));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(supp = 0.006,conf=0.06,target="rules"));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(supp = 0.006,conf=0.055,target="rules"));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(supp = 0.006,target="rules"));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(supp = 0.006));
inspect(basket_rules)
basket_rules <- apriori(txn,parameter = list(supp = 0.006,conf=0.05));
inspect(basket_rules)
rules_lift_gt_1=subset(basket_rules, subset = lift > 1)
basket_rules <- apriori(txn,parameter = list(supp = 0.006,conf=0.05));
inspect(rules_lift_gt_1)
basket_rules <- apriori(txn,parameter = list(supp = 0.0006,conf=0.05));
rules_lift_gt_1=subset(basket_rules, subset = lift > 1)
inspect(rules_lift_gt_1)
rules_lift_lt_1=subset(basket_rules, subset = lift < 1)
inspect(rules_lift_lt_1)
rules_lift_equalto_1=subset(basket_rules, subset = lift == 1)
inspect(rules_lift_equalto_1)
basket_rules <- apriori(txn,parameter = list(supp = 0.0006,conf=0.005));
rules_lift_equalto_1=subset(basket_rules, subset = lift == 1)
inspect(rules_lift_equalto_1)
basket_rules <- apriori(txn,parameter = list(supp = 0.0006,conf=0.00005));
rules_lift_gt_1=subset(basket_rules, subset = lift > 1)
rules_lift_lt_1=subset(basket_rules, subset = lift < 1)
rules_lift_equalto_1=subset(basket_rules, subset = lift == 1)
inspect(rules_lift_equalto_1)
inspect(rules_lift_lt_1)
basket_rules <- apriori(txn,parameter = list(sup>0.6,conf>0.3,target="rules"));
basket_rules <- apriori(txn,parameter = list(supp>0.6,conf>0.3,target="rules"));
sort(rules_lift_lt_1, by="confidence", decreasing=TRUE)
df3=head(rules_lift_lt_1,n=100)
inspect(df3)
df3=head(rules_lift_lt_1,n=100,by="confidence")
inspect(df3)
df3=head(rules_lift_lt_1,n=100,by="support")
inspect(df3)
df3=head(rules_lift_lt_1,n=100,by="confidence")
plot(df3,method="two-key plot")
View(Groceries)
View(df_combined)
View(df)
View(basket_rules)
basket_rules_2 <- apriori(txn,parameter = list(supp = 0.00001));
#this is standard,please dont vary that
basket_rules_infrequent <- apriori(txn,parameter = list(supp = 0.00001));
plot(basket_rules_infrequent,method="two-key plot")
library(arulesViz)
plot(basket_rules_infrequent,method="two-key plot")
basket_rules_2 <- apriori(txn,parameter = list(supp = 0.02,conf=0.00005));
basket_rules_3 <- apriori(txn,parameter = list(supp = 0.03,conf=0.00005));
plot(basket_rules_2,method="two-key plot")
plot(basket_rules_3,method="two-key plot")
plot(basket_rules_3, method="paracoord")
itemFrequencyPlot(txn, topN = 10)
plot(basket_rules_3, method = NULL, measure = "support")
plot(basket_rules_3,method="orderBy")
plot(basket_rules_3,method="matrix")
plot(basket_rules_3,method="iplots")
plot(basket_rules_3,method="two-key plot")
plot(basket_rules_1, method = "graph")
#question1
basket_rules_1 <- apriori(txn,parameter = list(supp = 0.01,conf=0.00005));
plot(basket_rules_1, method = "graph")
library(arulesViz)
plot(basket_rules_1, method = "graph")
#question1
basket_rules_1 <- apriori(txn,parameter = list(supp = 0.01,conf=0.00005));
basket_rules_2 <- apriori(txn,parameter = list(supp = 0.02,conf=0.00006));
basket_rules_3 <- apriori(txn,parameter = list(supp = 0.03,conf=0.00007));
basket_rules <- apriori(txn,parameter = list(supp = 0.00008,conf=0.0000005));
rules_lift_gt_1=subset(basket_rules, subset = lift > 1)
rules_lift_lt_1=subset(basket_rules_1, subset = lift < 1)
rules_lift_equalto_1=subset(basket_rules_1, subset = lift == 1)
df3=head(rules_lift_lt_1,n=100,by="confidence")
inspect(df3)
basket_rules <- apriori(txn,parameter = list(supp = 0.00001,conf=0.0000005));
rules_lift_gt_1=subset(basket_rules, subset = lift > 1)
rules_lift_lt_1=subset(basket_rules_1, subset = lift < 1)
rules_lift_equalto_1=subset(basket_rules_1, subset = lift == 1)
df3=head(rules_lift_lt_1,n=100,by="confidence")
inspect(df3)
df3=head(rules_lift_gt_1,n=100,by="confidence")
inspect(df3)
df3=head(rules_lift_equalto_1,n=100,by="confidence")
inspect(df3)
plot(df3,method="two-key plot")
library(arulesViz)
plot(df3,method="two-key plot")
df3=head(rules_lift_lt_1,n=100,by="confidence")
plot(df3,method="two-key plot")
plot(basket_rules_1, method = "matrix")
plot(basket_rules_1, method = "doubledecker")
plot(basket_rules_1, method = "graph")
basket_rules_3 <- apriori(txn,parameter = list(supp = 0.04,conf=0.00007));
plot(basket_rules_3,method="two-key plot")
library(arulesViz)
plot(basket_rules_3,method="two-key plot")
plot(basket_rules_3, method="paracoord")
plot(basket_rules_3,method="two-key plot")
plot(basket_rules_3, method="paracoord")
plot(basket_rules_1, method = "graph")
inspect(basket_rules_1)
inspect(head(basket_rules_1,n=10,by="support"))
inspect(head(basket_rules_1,n=20,by="support"))
